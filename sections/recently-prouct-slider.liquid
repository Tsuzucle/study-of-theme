{% comment -%}
------------------------------------
最近チェックした商品
------------------------------------
{%- endcomment -%}

<!-- product-recently-viewed -->
<div class="product-recently-viewed collection-slider">
    <div class="container">
      
      <h2 class="product-recently-viewed__title section__title">最近見た商品</h2>
  
      <ul id="js-recentlySliderBody" class="js-recentlySlider collection-slider__list product-recently-viewed__list">
  
                  {%- comment -%} 未ログイン時 {%- endcomment -%}
        <!-- {% unless customer %}
          <p id="wishlist-empty-text"
            style="padding: 60px 0; text-align: center; min-height: 320px; display: flex; align-items: center;">
            まだ最近チェックした商品がありません
          </p>
        {% endunless %}
   -->
      </ul>
    </div>
  </div>
  
  {%- comment -%} ログイン時のみ発動 {%- endcomment -%}
  <!-- {% if customer %} -->
    {%- comment -%} 商品カード {%- endcomment -%}
    {% raw %}
      <script id="recently-viewed-product-template"  type="text/x-jquery-tmpl"></script>
        <li class="featured-collection-slider__item collection-slider__item">
          <div class="product-card">
            <a href="${url}" class="product-card__link">
              <div class="product-card__head">
                <img src="${ Shopify.Products.resizeImage(featured_image , "master")}" alt="${title}">
              </div>
              <div class="product-card__body">
                <h3 class="product-card__title">${title}</h3>
                <p class="product-card__price">
                  ${(price / 100).toLocaleString()}
                  <span class="tax">（税込）</span>
                </p>
              </div>
            </a>
          </div>
        </li>
      
    {% endraw %}
  
  
    {%- comment -%} コントロールjs {%- endcomment -%}
    <script>
      window.addEventListener( 'load', function(){
        const recentlyViewController = (function(){
  
          // クッキーからデータを取得する
          let recentlyItems = jQuery.cookie('shopify_recently_viewed');
  
          // 閲覧履歴がある時 クッキーにデータがある時
          if(recentlyItems != null ) {
            Shopify.Products.showRecentlyViewed({
              howManyToShow: 8,// 表示する商品数を変更できます。
              wrapperId: 'js-recentlySliderBody',
              onComplete: function() {
                // データが読み込まれた後発火させたい時
                $('#js-recentlySliderBody').slick({
                  autoplay: false,
                  dots: false,
                  arrows: true,
                  slidesToShow: 4,
                  slidesToScroll: 1,
                  infinite: false,
                  prevArrow: '<button class="slick-prev"><span class="slick-arrow__inner"></span></button>',
                  nextArrow: '<button class="slick-next"><span class="slick-arrow__inner"></span></button>',
                  responsive: [
                    {
                      breakpoint: 480,
                      settings: {
                        slidesToShow: 2,
                      },
                    },
                  ],
                });
  
                // 非表示にしているアイテムを表示させる
                let lists = Array.from(document.querySelectorAll('li.recently-slider__item'));
                lists.forEach((item) => {
                  item.style.display = "block";
                });
              }
            });
          } else {
            // 閲覧履歴がない時の処理 クッキーにデータがない時
            document.getElementById('js-recentlySliderBody').insertAdjacentHTML("afterbegin",`<p id="wishlist-empty-text" style="padding: 60px 0; text-align: center;min-height: 320px; display: flex; align-items: center;">まだ最近チェックした商品がありません</p>`);
          }
  
        })();
      }, false);
    </script>
  <!-- {% endif %} -->
  
  {% schema %}
  {
    "name": "Product Recently Viewed",
    "settings": [
    ],
    "presets": [
      {
        "name": "Product Recently Viewed"
      }
    ]
  }
  {% endschema %}